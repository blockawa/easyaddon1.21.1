plugins {
    id "fabric-loom" version "1.7-SNAPSHOT"
}

base {
    archivesBaseName = project.archives_base_name
    version = project.mod_version
    group = project.maven_group
}

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url = "https://masa.dy.fi/maven" }
    maven {
        name = "Meteor Dev Releases"
        url = "https://maven.meteordev.org/releases"
    }
    maven {
        name = "Meteor Dev Snapshots"
        url = "https://maven.meteordev.org/snapshots"
    }
    maven {
        url 'https://maven.fabricmc.net'
    }
}

dependencies {
    // Fabric
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Meteor
    modImplementation "meteordevelopment:meteor-client:${project.meteor_version}"
    // modImplementation files("run/mods/meteor-client-0.5.6.jar")

    // litematica 依赖
    modImplementation "curse.maven:litematica-${project.litematica_projectid}:${project.litematica_fileid}"

    // malilib 依赖
    modImplementation "fi.dy.masa.malilib:malilib-fabric-1.20.4:${project.malilib_version}"

    // baritone 依赖
    modCompileOnly "meteordevelopment:baritone:${project.baritone_version}-SNAPSHOT"
}

tasks {
    processResources {
        def propertyMap = [
            "version"   : project.version,
            "mc_version": project.minecraft_version,
        ]

        filesMatching("fabric.mod.json") {
            expand(propertyMap)
        }
    }

    jar {
        from("LICENSE") {
            rename { "${it}_${project.base.archivesBaseName}" }
        }
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = "UTF-8"
        it.options.release = 21
    }
}

loom {
    // 配置runClient任务
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")

            // 设置游戏ID
            programArgs("--username", "日天")

            // 可选：设置窗口标题
            vmArgs("-Dfabric.development=true")
        }
    }
}
